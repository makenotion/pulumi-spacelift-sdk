// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getToolVersions(args: GetToolVersionsArgs, opts?: pulumi.InvokeOptions): Promise<GetToolVersionsResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("spacelift:index/getToolVersions:getToolVersions", {
        "id": args.id,
        "tool": args.tool,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getToolVersions.
 */
export interface GetToolVersionsArgs {
    id?: string;
    tool: string;
}

/**
 * A collection of values returned by getToolVersions.
 */
export interface GetToolVersionsResult {
    readonly id: string;
    readonly tool: string;
    readonly versions: string[];
}
export function getToolVersionsOutput(args: GetToolVersionsOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetToolVersionsResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("spacelift:index/getToolVersions:getToolVersions", {
        "id": args.id,
        "tool": args.tool,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getToolVersions.
 */
export interface GetToolVersionsOutputArgs {
    id?: pulumi.Input<string>;
    tool: pulumi.Input<string>;
}
