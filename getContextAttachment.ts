// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getContextAttachment(args: GetContextAttachmentArgs, opts?: pulumi.InvokeOptions): Promise<GetContextAttachmentResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("spacelift:index/getContextAttachment:getContextAttachment", {
        "contextId": args.contextId,
        "id": args.id,
        "moduleId": args.moduleId,
        "stackId": args.stackId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getContextAttachment.
 */
export interface GetContextAttachmentArgs {
    contextId: string;
    id?: string;
    moduleId?: string;
    stackId?: string;
}

/**
 * A collection of values returned by getContextAttachment.
 */
export interface GetContextAttachmentResult {
    readonly contextId: string;
    readonly id: string;
    readonly moduleId?: string;
    readonly priority: number;
    readonly stackId?: string;
}
export function getContextAttachmentOutput(args: GetContextAttachmentOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetContextAttachmentResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("spacelift:index/getContextAttachment:getContextAttachment", {
        "contextId": args.contextId,
        "id": args.id,
        "moduleId": args.moduleId,
        "stackId": args.stackId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getContextAttachment.
 */
export interface GetContextAttachmentOutputArgs {
    contextId: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    moduleId?: pulumi.Input<string>;
    stackId?: pulumi.Input<string>;
}
