// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getAzureIntegration(args?: GetAzureIntegrationArgs, opts?: pulumi.InvokeOptions): Promise<GetAzureIntegrationResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("spacelift:index/getAzureIntegration:getAzureIntegration", {
        "id": args.id,
        "integrationId": args.integrationId,
        "name": args.name,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getAzureIntegration.
 */
export interface GetAzureIntegrationArgs {
    id?: string;
    integrationId?: string;
    name?: string;
}

/**
 * A collection of values returned by getAzureIntegration.
 */
export interface GetAzureIntegrationResult {
    readonly adminConsentProvided: boolean;
    readonly adminConsentUrl: string;
    readonly applicationId: string;
    readonly defaultSubscriptionId: string;
    readonly displayName: string;
    readonly id: string;
    readonly integrationId: string;
    readonly labels: string[];
    readonly name: string;
    readonly spaceId: string;
    readonly tenantId: string;
}
export function getAzureIntegrationOutput(args?: GetAzureIntegrationOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetAzureIntegrationResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("spacelift:index/getAzureIntegration:getAzureIntegration", {
        "id": args.id,
        "integrationId": args.integrationId,
        "name": args.name,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getAzureIntegration.
 */
export interface GetAzureIntegrationOutputArgs {
    id?: pulumi.Input<string>;
    integrationId?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
}
