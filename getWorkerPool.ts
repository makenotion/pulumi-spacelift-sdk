// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getWorkerPool(args: GetWorkerPoolArgs, opts?: pulumi.InvokeOptions): Promise<GetWorkerPoolResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("spacelift-terraform-provider:index/getWorkerPool:getWorkerPool", {
        "id": args.id,
        "workerPoolId": args.workerPoolId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getWorkerPool.
 */
export interface GetWorkerPoolArgs {
    id?: string;
    workerPoolId: string;
}

/**
 * A collection of values returned by getWorkerPool.
 */
export interface GetWorkerPoolResult {
    readonly config: string;
    readonly description: string;
    readonly driftDetectionRunLimit: number;
    readonly id: string;
    readonly labels: string[];
    readonly name: string;
    readonly spaceId: string;
    readonly workerPoolId: string;
}
export function getWorkerPoolOutput(args: GetWorkerPoolOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetWorkerPoolResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("spacelift-terraform-provider:index/getWorkerPool:getWorkerPool", {
        "id": args.id,
        "workerPoolId": args.workerPoolId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getWorkerPool.
 */
export interface GetWorkerPoolOutputArgs {
    id?: pulumi.Input<string>;
    workerPoolId: pulumi.Input<string>;
}
