// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getAwsIntegration(args?: GetAwsIntegrationArgs, opts?: pulumi.InvokeOptions): Promise<GetAwsIntegrationResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("spacelift:index/getAwsIntegration:getAwsIntegration", {
        "id": args.id,
        "integrationId": args.integrationId,
        "name": args.name,
        "region": args.region,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getAwsIntegration.
 */
export interface GetAwsIntegrationArgs {
    id?: string;
    integrationId?: string;
    name?: string;
    region?: string;
}

/**
 * A collection of values returned by getAwsIntegration.
 */
export interface GetAwsIntegrationResult {
    readonly durationSeconds: number;
    readonly externalId: string;
    readonly generateCredentialsInWorker: boolean;
    readonly id: string;
    readonly integrationId: string;
    readonly labels: string[];
    readonly name: string;
    readonly region: string;
    readonly roleArn: string;
    readonly spaceId: string;
}
export function getAwsIntegrationOutput(args?: GetAwsIntegrationOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetAwsIntegrationResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("spacelift:index/getAwsIntegration:getAwsIntegration", {
        "id": args.id,
        "integrationId": args.integrationId,
        "name": args.name,
        "region": args.region,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getAwsIntegration.
 */
export interface GetAwsIntegrationOutputArgs {
    id?: pulumi.Input<string>;
    integrationId?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    region?: pulumi.Input<string>;
}
