// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getBitbucketDatacenterIntegration(args?: GetBitbucketDatacenterIntegrationArgs, opts?: pulumi.InvokeOptions): Promise<GetBitbucketDatacenterIntegrationResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("spacelift:index/getBitbucketDatacenterIntegration:getBitbucketDatacenterIntegration", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getBitbucketDatacenterIntegration.
 */
export interface GetBitbucketDatacenterIntegrationArgs {
    id?: string;
}

/**
 * A collection of values returned by getBitbucketDatacenterIntegration.
 */
export interface GetBitbucketDatacenterIntegrationResult {
    readonly apiHost: string;
    readonly description: string;
    readonly id?: string;
    readonly isDefault: boolean;
    readonly labels: string[];
    readonly name: string;
    readonly spaceId: string;
    readonly userFacingHost: string;
    readonly username: string;
    readonly vcsChecks: string;
    readonly webhookSecret: string;
    readonly webhookUrl: string;
}
export function getBitbucketDatacenterIntegrationOutput(args?: GetBitbucketDatacenterIntegrationOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetBitbucketDatacenterIntegrationResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("spacelift:index/getBitbucketDatacenterIntegration:getBitbucketDatacenterIntegration", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getBitbucketDatacenterIntegration.
 */
export interface GetBitbucketDatacenterIntegrationOutputArgs {
    id?: pulumi.Input<string>;
}
