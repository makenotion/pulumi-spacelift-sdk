// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class RoleAttachment extends pulumi.CustomResource {
    /**
     * Get an existing RoleAttachment resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: RoleAttachmentState, opts?: pulumi.CustomResourceOptions): RoleAttachment {
        return new RoleAttachment(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'spacelift-terraform-provider:index/roleAttachment:RoleAttachment';

    /**
     * Returns true if the given object is an instance of RoleAttachment.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is RoleAttachment {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === RoleAttachment.__pulumiType;
    }

    /**
     * ID of the API key (ULID format) to attach to the role. For example: `01F8Z5K4Y3D1G2H3J4K5L6M7N8`.
     */
    declare public readonly apiKeyId: pulumi.Output<string | undefined>;
    /**
     * ID of the IdP Group Mapping (ULID format) to attach to the role. For example: `01F8Z5K4Y3D1G2H3J4K5L6M7N8`.
     */
    declare public readonly idpGroupMappingId: pulumi.Output<string | undefined>;
    declare public readonly roleAttachmentId: pulumi.Output<string>;
    /**
     * ID of the role (ULID format) to attach to the API key, IdP Group or to the user. For example:
     * `01F8Z5K4Y3D1G2H3J4K5L6M7N8`.
     */
    declare public readonly roleId: pulumi.Output<string>;
    /**
     * ID of the space where the role attachment should be created
     */
    declare public readonly spaceId: pulumi.Output<string>;
    /**
     * ID of the user (ULID format) to attach to the role. For example: `01F8Z5K4Y3D1G2H3J4K5L6M7N8`.
     */
    declare public readonly userId: pulumi.Output<string | undefined>;

    /**
     * Create a RoleAttachment resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: RoleAttachmentArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: RoleAttachmentArgs | RoleAttachmentState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as RoleAttachmentState | undefined;
            resourceInputs["apiKeyId"] = state?.apiKeyId;
            resourceInputs["idpGroupMappingId"] = state?.idpGroupMappingId;
            resourceInputs["roleAttachmentId"] = state?.roleAttachmentId;
            resourceInputs["roleId"] = state?.roleId;
            resourceInputs["spaceId"] = state?.spaceId;
            resourceInputs["userId"] = state?.userId;
        } else {
            const args = argsOrState as RoleAttachmentArgs | undefined;
            if (args?.roleId === undefined && !opts.urn) {
                throw new Error("Missing required property 'roleId'");
            }
            if (args?.spaceId === undefined && !opts.urn) {
                throw new Error("Missing required property 'spaceId'");
            }
            resourceInputs["apiKeyId"] = args?.apiKeyId;
            resourceInputs["idpGroupMappingId"] = args?.idpGroupMappingId;
            resourceInputs["roleAttachmentId"] = args?.roleAttachmentId;
            resourceInputs["roleId"] = args?.roleId;
            resourceInputs["spaceId"] = args?.spaceId;
            resourceInputs["userId"] = args?.userId;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(RoleAttachment.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering RoleAttachment resources.
 */
export interface RoleAttachmentState {
    /**
     * ID of the API key (ULID format) to attach to the role. For example: `01F8Z5K4Y3D1G2H3J4K5L6M7N8`.
     */
    apiKeyId?: pulumi.Input<string>;
    /**
     * ID of the IdP Group Mapping (ULID format) to attach to the role. For example: `01F8Z5K4Y3D1G2H3J4K5L6M7N8`.
     */
    idpGroupMappingId?: pulumi.Input<string>;
    roleAttachmentId?: pulumi.Input<string>;
    /**
     * ID of the role (ULID format) to attach to the API key, IdP Group or to the user. For example:
     * `01F8Z5K4Y3D1G2H3J4K5L6M7N8`.
     */
    roleId?: pulumi.Input<string>;
    /**
     * ID of the space where the role attachment should be created
     */
    spaceId?: pulumi.Input<string>;
    /**
     * ID of the user (ULID format) to attach to the role. For example: `01F8Z5K4Y3D1G2H3J4K5L6M7N8`.
     */
    userId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a RoleAttachment resource.
 */
export interface RoleAttachmentArgs {
    /**
     * ID of the API key (ULID format) to attach to the role. For example: `01F8Z5K4Y3D1G2H3J4K5L6M7N8`.
     */
    apiKeyId?: pulumi.Input<string>;
    /**
     * ID of the IdP Group Mapping (ULID format) to attach to the role. For example: `01F8Z5K4Y3D1G2H3J4K5L6M7N8`.
     */
    idpGroupMappingId?: pulumi.Input<string>;
    roleAttachmentId?: pulumi.Input<string>;
    /**
     * ID of the role (ULID format) to attach to the API key, IdP Group or to the user. For example:
     * `01F8Z5K4Y3D1G2H3J4K5L6M7N8`.
     */
    roleId: pulumi.Input<string>;
    /**
     * ID of the space where the role attachment should be created
     */
    spaceId: pulumi.Input<string>;
    /**
     * ID of the user (ULID format) to attach to the role. For example: `01F8Z5K4Y3D1G2H3J4K5L6M7N8`.
     */
    userId?: pulumi.Input<string>;
}
