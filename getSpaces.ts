// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getSpaces(args?: GetSpacesArgs, opts?: pulumi.InvokeOptions): Promise<GetSpacesResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("spacelift:index/getSpaces:getSpaces", {
        "id": args.id,
        "labels": args.labels,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getSpaces.
 */
export interface GetSpacesArgs {
    id?: string;
    labels?: string[];
}

/**
 * A collection of values returned by getSpaces.
 */
export interface GetSpacesResult {
    readonly id: string;
    readonly labels?: string[];
    readonly spaces: outputs.GetSpacesSpace[];
}
export function getSpacesOutput(args?: GetSpacesOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetSpacesResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("spacelift:index/getSpaces:getSpaces", {
        "id": args.id,
        "labels": args.labels,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getSpaces.
 */
export interface GetSpacesOutputArgs {
    id?: pulumi.Input<string>;
    labels?: pulumi.Input<pulumi.Input<string>[]>;
}
