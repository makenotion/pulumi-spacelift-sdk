// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getRole(args?: GetRoleArgs, opts?: pulumi.InvokeOptions): Promise<GetRoleResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("spacelift:index/getRole:getRole", {
        "id": args.id,
        "roleId": args.roleId,
        "slug": args.slug,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getRole.
 */
export interface GetRoleArgs {
    id?: string;
    roleId?: string;
    slug?: string;
}

/**
 * A collection of values returned by getRole.
 */
export interface GetRoleResult {
    readonly actions: string[];
    readonly description: string;
    readonly id: string;
    readonly isSystem: boolean;
    readonly name: string;
    readonly roleId: string;
    readonly slug: string;
}
export function getRoleOutput(args?: GetRoleOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetRoleResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("spacelift:index/getRole:getRole", {
        "id": args.id,
        "roleId": args.roleId,
        "slug": args.slug,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getRole.
 */
export interface GetRoleOutputArgs {
    id?: pulumi.Input<string>;
    roleId?: pulumi.Input<string>;
    slug?: pulumi.Input<string>;
}
