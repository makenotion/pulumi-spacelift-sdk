// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getContext(args: GetContextArgs, opts?: pulumi.InvokeOptions): Promise<GetContextResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("spacelift-terraform-provider:index/getContext:getContext", {
        "afterApplies": args.afterApplies,
        "afterDestroys": args.afterDestroys,
        "afterInits": args.afterInits,
        "afterPerforms": args.afterPerforms,
        "afterPlans": args.afterPlans,
        "afterRuns": args.afterRuns,
        "beforeApplies": args.beforeApplies,
        "beforeDestroys": args.beforeDestroys,
        "beforeInits": args.beforeInits,
        "beforePerforms": args.beforePerforms,
        "beforePlans": args.beforePlans,
        "contextId": args.contextId,
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getContext.
 */
export interface GetContextArgs {
    afterApplies?: string[];
    afterDestroys?: string[];
    afterInits?: string[];
    afterPerforms?: string[];
    afterPlans?: string[];
    afterRuns?: string[];
    beforeApplies?: string[];
    beforeDestroys?: string[];
    beforeInits?: string[];
    beforePerforms?: string[];
    beforePlans?: string[];
    contextId: string;
    id?: string;
}

/**
 * A collection of values returned by getContext.
 */
export interface GetContextResult {
    readonly afterApplies: string[];
    readonly afterDestroys: string[];
    readonly afterInits: string[];
    readonly afterPerforms: string[];
    readonly afterPlans: string[];
    readonly afterRuns?: string[];
    readonly beforeApplies: string[];
    readonly beforeDestroys: string[];
    readonly beforeInits: string[];
    readonly beforePerforms: string[];
    readonly beforePlans: string[];
    readonly contextId: string;
    readonly description: string;
    readonly id: string;
    readonly labels: string[];
    readonly name: string;
    readonly spaceId: string;
}
export function getContextOutput(args: GetContextOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetContextResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("spacelift-terraform-provider:index/getContext:getContext", {
        "afterApplies": args.afterApplies,
        "afterDestroys": args.afterDestroys,
        "afterInits": args.afterInits,
        "afterPerforms": args.afterPerforms,
        "afterPlans": args.afterPlans,
        "afterRuns": args.afterRuns,
        "beforeApplies": args.beforeApplies,
        "beforeDestroys": args.beforeDestroys,
        "beforeInits": args.beforeInits,
        "beforePerforms": args.beforePerforms,
        "beforePlans": args.beforePlans,
        "contextId": args.contextId,
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getContext.
 */
export interface GetContextOutputArgs {
    afterApplies?: pulumi.Input<pulumi.Input<string>[]>;
    afterDestroys?: pulumi.Input<pulumi.Input<string>[]>;
    afterInits?: pulumi.Input<pulumi.Input<string>[]>;
    afterPerforms?: pulumi.Input<pulumi.Input<string>[]>;
    afterPlans?: pulumi.Input<pulumi.Input<string>[]>;
    afterRuns?: pulumi.Input<pulumi.Input<string>[]>;
    beforeApplies?: pulumi.Input<pulumi.Input<string>[]>;
    beforeDestroys?: pulumi.Input<pulumi.Input<string>[]>;
    beforeInits?: pulumi.Input<pulumi.Input<string>[]>;
    beforePerforms?: pulumi.Input<pulumi.Input<string>[]>;
    beforePlans?: pulumi.Input<pulumi.Input<string>[]>;
    contextId: pulumi.Input<string>;
    id?: pulumi.Input<string>;
}
