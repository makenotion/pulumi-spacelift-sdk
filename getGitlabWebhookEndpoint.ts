// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getGitlabWebhookEndpoint(args?: GetGitlabWebhookEndpointArgs, opts?: pulumi.InvokeOptions): Promise<GetGitlabWebhookEndpointResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("spacelift:index/getGitlabWebhookEndpoint:getGitlabWebhookEndpoint", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getGitlabWebhookEndpoint.
 */
export interface GetGitlabWebhookEndpointArgs {
    id?: string;
}

/**
 * A collection of values returned by getGitlabWebhookEndpoint.
 */
export interface GetGitlabWebhookEndpointResult {
    readonly id: string;
    readonly webhookEndpoint: string;
}
export function getGitlabWebhookEndpointOutput(args?: GetGitlabWebhookEndpointOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetGitlabWebhookEndpointResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("spacelift:index/getGitlabWebhookEndpoint:getGitlabWebhookEndpoint", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getGitlabWebhookEndpoint.
 */
export interface GetGitlabWebhookEndpointOutputArgs {
    id?: pulumi.Input<string>;
}
