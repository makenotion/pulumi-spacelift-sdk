// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getContexts(args?: GetContextsArgs, opts?: pulumi.InvokeOptions): Promise<GetContextsResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("spacelift-terraform-provider:index/getContexts:getContexts", {
        "id": args.id,
        "labels": args.labels,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getContexts.
 */
export interface GetContextsArgs {
    id?: string;
    labels?: inputs.GetContextsLabel[];
}

/**
 * A collection of values returned by getContexts.
 */
export interface GetContextsResult {
    readonly contexts: outputs.GetContextsContext[];
    readonly id: string;
    readonly labels?: outputs.GetContextsLabel[];
}
export function getContextsOutput(args?: GetContextsOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetContextsResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("spacelift-terraform-provider:index/getContexts:getContexts", {
        "id": args.id,
        "labels": args.labels,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getContexts.
 */
export interface GetContextsOutputArgs {
    id?: pulumi.Input<string>;
    labels?: pulumi.Input<pulumi.Input<inputs.GetContextsLabelArgs>[]>;
}
