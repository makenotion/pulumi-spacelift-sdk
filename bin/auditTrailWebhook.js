"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.AuditTrailWebhook = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("./utilities");
class AuditTrailWebhook extends pulumi.CustomResource {
    /**
     * Get an existing AuditTrailWebhook resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new AuditTrailWebhook(name, state, { ...opts, id: id });
    }
    /**
     * Returns true if the given object is an instance of AuditTrailWebhook.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AuditTrailWebhook.__pulumiType;
    }
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["auditTrailWebhookId"] = state?.auditTrailWebhookId;
            resourceInputs["customHeaders"] = state?.customHeaders;
            resourceInputs["enabled"] = state?.enabled;
            resourceInputs["endpoint"] = state?.endpoint;
            resourceInputs["includeRuns"] = state?.includeRuns;
            resourceInputs["secret"] = state?.secret;
        }
        else {
            const args = argsOrState;
            if (args?.enabled === undefined && !opts.urn) {
                throw new Error("Missing required property 'enabled'");
            }
            if (args?.endpoint === undefined && !opts.urn) {
                throw new Error("Missing required property 'endpoint'");
            }
            if (args?.secret === undefined && !opts.urn) {
                throw new Error("Missing required property 'secret'");
            }
            resourceInputs["auditTrailWebhookId"] = args?.auditTrailWebhookId;
            resourceInputs["customHeaders"] = args?.customHeaders;
            resourceInputs["enabled"] = args?.enabled;
            resourceInputs["endpoint"] = args?.endpoint;
            resourceInputs["includeRuns"] = args?.includeRuns;
            resourceInputs["secret"] = args?.secret ? pulumi.secret(args.secret) : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["secret"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(AuditTrailWebhook.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}
exports.AuditTrailWebhook = AuditTrailWebhook;
/** @internal */
AuditTrailWebhook.__pulumiType = 'spacelift-terraform-provider:index/auditTrailWebhook:AuditTrailWebhook';
//# sourceMappingURL=auditTrailWebhook.js.map