"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.getEnvironmentVariable = exports.getDriftDetectionOutput = exports.getDriftDetection = exports.getCurrentStackOutput = exports.getCurrentStack = exports.getCurrentSpaceOutput = exports.getCurrentSpace = exports.getContextsOutput = exports.getContexts = exports.getContextAttachmentOutput = exports.getContextAttachment = exports.getContextOutput = exports.getContext = exports.getBitbucketDatacenterIntegrationOutput = exports.getBitbucketDatacenterIntegration = exports.getBitbucketCloudIntegrationOutput = exports.getBitbucketCloudIntegration = exports.getAzureIntegrationsOutput = exports.getAzureIntegrations = exports.getAzureIntegrationAttachmentOutput = exports.getAzureIntegrationAttachment = exports.getAzureIntegrationOutput = exports.getAzureIntegration = exports.getAzureDevopsIntegrationOutput = exports.getAzureDevopsIntegration = exports.getAwsRoleOutput = exports.getAwsRole = exports.getAwsIntegrationsOutput = exports.getAwsIntegrations = exports.getAwsIntegrationAttachmentExternalIdOutput = exports.getAwsIntegrationAttachmentExternalId = exports.getAwsIntegrationAttachmentOutput = exports.getAwsIntegrationAttachment = exports.getAwsIntegrationOutput = exports.getAwsIntegration = exports.getAccountOutput = exports.getAccount = exports.GcpServiceAccount = exports.EnvironmentVariable = exports.DriftDetection = exports.ContextAttachment = exports.Context = exports.Blueprint = exports.BitbucketDatacenterIntegration = exports.AzureIntegrationAttachment = exports.AzureIntegration = exports.AwsRole = exports.AwsIntegrationAttachment = exports.AwsIntegration = exports.AuditTrailWebhook = void 0;
exports.getToolVersions = exports.getStacksOutput = exports.getStacks = exports.getStackGcpServiceAccountOutput = exports.getStackGcpServiceAccount = exports.getStackAwsRoleOutput = exports.getStackAwsRole = exports.getStackOutput = exports.getStack = exports.getSpacesOutput = exports.getSpaces = exports.getSpaceByPathOutput = exports.getSpaceByPath = exports.getSpaceOutput = exports.getSpace = exports.getScheduledTaskOutput = exports.getScheduledTask = exports.getScheduledRunOutput = exports.getScheduledRun = exports.getScheduledDeleteStackOutput = exports.getScheduledDeleteStack = exports.getSavedFiltersOutput = exports.getSavedFilters = exports.getSavedFilterOutput = exports.getSavedFilter = exports.getRoleActionsOutput = exports.getRoleActions = exports.getRoleOutput = exports.getRole = exports.getPolicyOutput = exports.getPolicy = exports.getPoliciesOutput = exports.getPolicies = exports.getNamedWebhookOutput = exports.getNamedWebhook = exports.getMountedFileOutput = exports.getMountedFile = exports.getModuleOutput = exports.getModule = exports.getIpsOutput = exports.getIps = exports.getGitlabWebhookEndpointOutput = exports.getGitlabWebhookEndpoint = exports.getGitlabIntegrationOutput = exports.getGitlabIntegration = exports.getGithubEnterpriseIntegrationOutput = exports.getGithubEnterpriseIntegration = exports.getGcpServiceAccountOutput = exports.getGcpServiceAccount = exports.getEnvironmentVariableOutput = void 0;
exports.types = exports.config = exports.WorkerPool = exports.Webhook = exports.Version = exports.VcsAgentPool = exports.User = exports.TerraformProvider = exports.Task = exports.StackGcpServiceAccount = exports.StackDestructor = exports.StackDependencyReference = exports.StackDependency = exports.StackAwsRole = exports.StackActivator = exports.Stack = exports.Space = exports.SecurityEmail = exports.ScheduledTask = exports.ScheduledRun = exports.ScheduledDeleteStack = exports.SavedFilter = exports.Run = exports.RoleAttachment = exports.Role = exports.PolicyAttachment = exports.Policy = exports.NamedWebhookSecretHeader = exports.NamedWebhook = exports.MountedFile = exports.Module = exports.IdpGroupMapping = exports.GitlabIntegration = exports.getWorkerPoolsOutput = exports.getWorkerPools = exports.getWorkerPoolOutput = exports.getWorkerPool = exports.getWebhookOutput = exports.getWebhook = exports.getVcsAgentPoolsOutput = exports.getVcsAgentPools = exports.getVcsAgentPoolOutput = exports.getVcsAgentPool = exports.getUserOutput = exports.getUser = exports.getToolVersionsOutput = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("./utilities");
exports.AuditTrailWebhook = null;
utilities.lazyLoad(exports, ["AuditTrailWebhook"], () => require("./auditTrailWebhook"));
exports.AwsIntegration = null;
utilities.lazyLoad(exports, ["AwsIntegration"], () => require("./awsIntegration"));
exports.AwsIntegrationAttachment = null;
utilities.lazyLoad(exports, ["AwsIntegrationAttachment"], () => require("./awsIntegrationAttachment"));
exports.AwsRole = null;
utilities.lazyLoad(exports, ["AwsRole"], () => require("./awsRole"));
exports.AzureIntegration = null;
utilities.lazyLoad(exports, ["AzureIntegration"], () => require("./azureIntegration"));
exports.AzureIntegrationAttachment = null;
utilities.lazyLoad(exports, ["AzureIntegrationAttachment"], () => require("./azureIntegrationAttachment"));
exports.BitbucketDatacenterIntegration = null;
utilities.lazyLoad(exports, ["BitbucketDatacenterIntegration"], () => require("./bitbucketDatacenterIntegration"));
exports.Blueprint = null;
utilities.lazyLoad(exports, ["Blueprint"], () => require("./blueprint"));
exports.Context = null;
utilities.lazyLoad(exports, ["Context"], () => require("./context"));
exports.ContextAttachment = null;
utilities.lazyLoad(exports, ["ContextAttachment"], () => require("./contextAttachment"));
exports.DriftDetection = null;
utilities.lazyLoad(exports, ["DriftDetection"], () => require("./driftDetection"));
exports.EnvironmentVariable = null;
utilities.lazyLoad(exports, ["EnvironmentVariable"], () => require("./environmentVariable"));
exports.GcpServiceAccount = null;
utilities.lazyLoad(exports, ["GcpServiceAccount"], () => require("./gcpServiceAccount"));
exports.getAccount = null;
exports.getAccountOutput = null;
utilities.lazyLoad(exports, ["getAccount", "getAccountOutput"], () => require("./getAccount"));
exports.getAwsIntegration = null;
exports.getAwsIntegrationOutput = null;
utilities.lazyLoad(exports, ["getAwsIntegration", "getAwsIntegrationOutput"], () => require("./getAwsIntegration"));
exports.getAwsIntegrationAttachment = null;
exports.getAwsIntegrationAttachmentOutput = null;
utilities.lazyLoad(exports, ["getAwsIntegrationAttachment", "getAwsIntegrationAttachmentOutput"], () => require("./getAwsIntegrationAttachment"));
exports.getAwsIntegrationAttachmentExternalId = null;
exports.getAwsIntegrationAttachmentExternalIdOutput = null;
utilities.lazyLoad(exports, ["getAwsIntegrationAttachmentExternalId", "getAwsIntegrationAttachmentExternalIdOutput"], () => require("./getAwsIntegrationAttachmentExternalId"));
exports.getAwsIntegrations = null;
exports.getAwsIntegrationsOutput = null;
utilities.lazyLoad(exports, ["getAwsIntegrations", "getAwsIntegrationsOutput"], () => require("./getAwsIntegrations"));
exports.getAwsRole = null;
exports.getAwsRoleOutput = null;
utilities.lazyLoad(exports, ["getAwsRole", "getAwsRoleOutput"], () => require("./getAwsRole"));
exports.getAzureDevopsIntegration = null;
exports.getAzureDevopsIntegrationOutput = null;
utilities.lazyLoad(exports, ["getAzureDevopsIntegration", "getAzureDevopsIntegrationOutput"], () => require("./getAzureDevopsIntegration"));
exports.getAzureIntegration = null;
exports.getAzureIntegrationOutput = null;
utilities.lazyLoad(exports, ["getAzureIntegration", "getAzureIntegrationOutput"], () => require("./getAzureIntegration"));
exports.getAzureIntegrationAttachment = null;
exports.getAzureIntegrationAttachmentOutput = null;
utilities.lazyLoad(exports, ["getAzureIntegrationAttachment", "getAzureIntegrationAttachmentOutput"], () => require("./getAzureIntegrationAttachment"));
exports.getAzureIntegrations = null;
exports.getAzureIntegrationsOutput = null;
utilities.lazyLoad(exports, ["getAzureIntegrations", "getAzureIntegrationsOutput"], () => require("./getAzureIntegrations"));
exports.getBitbucketCloudIntegration = null;
exports.getBitbucketCloudIntegrationOutput = null;
utilities.lazyLoad(exports, ["getBitbucketCloudIntegration", "getBitbucketCloudIntegrationOutput"], () => require("./getBitbucketCloudIntegration"));
exports.getBitbucketDatacenterIntegration = null;
exports.getBitbucketDatacenterIntegrationOutput = null;
utilities.lazyLoad(exports, ["getBitbucketDatacenterIntegration", "getBitbucketDatacenterIntegrationOutput"], () => require("./getBitbucketDatacenterIntegration"));
exports.getContext = null;
exports.getContextOutput = null;
utilities.lazyLoad(exports, ["getContext", "getContextOutput"], () => require("./getContext"));
exports.getContextAttachment = null;
exports.getContextAttachmentOutput = null;
utilities.lazyLoad(exports, ["getContextAttachment", "getContextAttachmentOutput"], () => require("./getContextAttachment"));
exports.getContexts = null;
exports.getContextsOutput = null;
utilities.lazyLoad(exports, ["getContexts", "getContextsOutput"], () => require("./getContexts"));
exports.getCurrentSpace = null;
exports.getCurrentSpaceOutput = null;
utilities.lazyLoad(exports, ["getCurrentSpace", "getCurrentSpaceOutput"], () => require("./getCurrentSpace"));
exports.getCurrentStack = null;
exports.getCurrentStackOutput = null;
utilities.lazyLoad(exports, ["getCurrentStack", "getCurrentStackOutput"], () => require("./getCurrentStack"));
exports.getDriftDetection = null;
exports.getDriftDetectionOutput = null;
utilities.lazyLoad(exports, ["getDriftDetection", "getDriftDetectionOutput"], () => require("./getDriftDetection"));
exports.getEnvironmentVariable = null;
exports.getEnvironmentVariableOutput = null;
utilities.lazyLoad(exports, ["getEnvironmentVariable", "getEnvironmentVariableOutput"], () => require("./getEnvironmentVariable"));
exports.getGcpServiceAccount = null;
exports.getGcpServiceAccountOutput = null;
utilities.lazyLoad(exports, ["getGcpServiceAccount", "getGcpServiceAccountOutput"], () => require("./getGcpServiceAccount"));
exports.getGithubEnterpriseIntegration = null;
exports.getGithubEnterpriseIntegrationOutput = null;
utilities.lazyLoad(exports, ["getGithubEnterpriseIntegration", "getGithubEnterpriseIntegrationOutput"], () => require("./getGithubEnterpriseIntegration"));
exports.getGitlabIntegration = null;
exports.getGitlabIntegrationOutput = null;
utilities.lazyLoad(exports, ["getGitlabIntegration", "getGitlabIntegrationOutput"], () => require("./getGitlabIntegration"));
exports.getGitlabWebhookEndpoint = null;
exports.getGitlabWebhookEndpointOutput = null;
utilities.lazyLoad(exports, ["getGitlabWebhookEndpoint", "getGitlabWebhookEndpointOutput"], () => require("./getGitlabWebhookEndpoint"));
exports.getIps = null;
exports.getIpsOutput = null;
utilities.lazyLoad(exports, ["getIps", "getIpsOutput"], () => require("./getIps"));
exports.getModule = null;
exports.getModuleOutput = null;
utilities.lazyLoad(exports, ["getModule", "getModuleOutput"], () => require("./getModule"));
exports.getMountedFile = null;
exports.getMountedFileOutput = null;
utilities.lazyLoad(exports, ["getMountedFile", "getMountedFileOutput"], () => require("./getMountedFile"));
exports.getNamedWebhook = null;
exports.getNamedWebhookOutput = null;
utilities.lazyLoad(exports, ["getNamedWebhook", "getNamedWebhookOutput"], () => require("./getNamedWebhook"));
exports.getPolicies = null;
exports.getPoliciesOutput = null;
utilities.lazyLoad(exports, ["getPolicies", "getPoliciesOutput"], () => require("./getPolicies"));
exports.getPolicy = null;
exports.getPolicyOutput = null;
utilities.lazyLoad(exports, ["getPolicy", "getPolicyOutput"], () => require("./getPolicy"));
exports.getRole = null;
exports.getRoleOutput = null;
utilities.lazyLoad(exports, ["getRole", "getRoleOutput"], () => require("./getRole"));
exports.getRoleActions = null;
exports.getRoleActionsOutput = null;
utilities.lazyLoad(exports, ["getRoleActions", "getRoleActionsOutput"], () => require("./getRoleActions"));
exports.getSavedFilter = null;
exports.getSavedFilterOutput = null;
utilities.lazyLoad(exports, ["getSavedFilter", "getSavedFilterOutput"], () => require("./getSavedFilter"));
exports.getSavedFilters = null;
exports.getSavedFiltersOutput = null;
utilities.lazyLoad(exports, ["getSavedFilters", "getSavedFiltersOutput"], () => require("./getSavedFilters"));
exports.getScheduledDeleteStack = null;
exports.getScheduledDeleteStackOutput = null;
utilities.lazyLoad(exports, ["getScheduledDeleteStack", "getScheduledDeleteStackOutput"], () => require("./getScheduledDeleteStack"));
exports.getScheduledRun = null;
exports.getScheduledRunOutput = null;
utilities.lazyLoad(exports, ["getScheduledRun", "getScheduledRunOutput"], () => require("./getScheduledRun"));
exports.getScheduledTask = null;
exports.getScheduledTaskOutput = null;
utilities.lazyLoad(exports, ["getScheduledTask", "getScheduledTaskOutput"], () => require("./getScheduledTask"));
exports.getSpace = null;
exports.getSpaceOutput = null;
utilities.lazyLoad(exports, ["getSpace", "getSpaceOutput"], () => require("./getSpace"));
exports.getSpaceByPath = null;
exports.getSpaceByPathOutput = null;
utilities.lazyLoad(exports, ["getSpaceByPath", "getSpaceByPathOutput"], () => require("./getSpaceByPath"));
exports.getSpaces = null;
exports.getSpacesOutput = null;
utilities.lazyLoad(exports, ["getSpaces", "getSpacesOutput"], () => require("./getSpaces"));
exports.getStack = null;
exports.getStackOutput = null;
utilities.lazyLoad(exports, ["getStack", "getStackOutput"], () => require("./getStack"));
exports.getStackAwsRole = null;
exports.getStackAwsRoleOutput = null;
utilities.lazyLoad(exports, ["getStackAwsRole", "getStackAwsRoleOutput"], () => require("./getStackAwsRole"));
exports.getStackGcpServiceAccount = null;
exports.getStackGcpServiceAccountOutput = null;
utilities.lazyLoad(exports, ["getStackGcpServiceAccount", "getStackGcpServiceAccountOutput"], () => require("./getStackGcpServiceAccount"));
exports.getStacks = null;
exports.getStacksOutput = null;
utilities.lazyLoad(exports, ["getStacks", "getStacksOutput"], () => require("./getStacks"));
exports.getToolVersions = null;
exports.getToolVersionsOutput = null;
utilities.lazyLoad(exports, ["getToolVersions", "getToolVersionsOutput"], () => require("./getToolVersions"));
exports.getUser = null;
exports.getUserOutput = null;
utilities.lazyLoad(exports, ["getUser", "getUserOutput"], () => require("./getUser"));
exports.getVcsAgentPool = null;
exports.getVcsAgentPoolOutput = null;
utilities.lazyLoad(exports, ["getVcsAgentPool", "getVcsAgentPoolOutput"], () => require("./getVcsAgentPool"));
exports.getVcsAgentPools = null;
exports.getVcsAgentPoolsOutput = null;
utilities.lazyLoad(exports, ["getVcsAgentPools", "getVcsAgentPoolsOutput"], () => require("./getVcsAgentPools"));
exports.getWebhook = null;
exports.getWebhookOutput = null;
utilities.lazyLoad(exports, ["getWebhook", "getWebhookOutput"], () => require("./getWebhook"));
exports.getWorkerPool = null;
exports.getWorkerPoolOutput = null;
utilities.lazyLoad(exports, ["getWorkerPool", "getWorkerPoolOutput"], () => require("./getWorkerPool"));
exports.getWorkerPools = null;
exports.getWorkerPoolsOutput = null;
utilities.lazyLoad(exports, ["getWorkerPools", "getWorkerPoolsOutput"], () => require("./getWorkerPools"));
exports.GitlabIntegration = null;
utilities.lazyLoad(exports, ["GitlabIntegration"], () => require("./gitlabIntegration"));
exports.IdpGroupMapping = null;
utilities.lazyLoad(exports, ["IdpGroupMapping"], () => require("./idpGroupMapping"));
exports.Module = null;
utilities.lazyLoad(exports, ["Module"], () => require("./module"));
exports.MountedFile = null;
utilities.lazyLoad(exports, ["MountedFile"], () => require("./mountedFile"));
exports.NamedWebhook = null;
utilities.lazyLoad(exports, ["NamedWebhook"], () => require("./namedWebhook"));
exports.NamedWebhookSecretHeader = null;
utilities.lazyLoad(exports, ["NamedWebhookSecretHeader"], () => require("./namedWebhookSecretHeader"));
exports.Policy = null;
utilities.lazyLoad(exports, ["Policy"], () => require("./policy"));
exports.PolicyAttachment = null;
utilities.lazyLoad(exports, ["PolicyAttachment"], () => require("./policyAttachment"));
__exportStar(require("./provider"), exports);
const provider_1 = require("./provider");
exports.Role = null;
utilities.lazyLoad(exports, ["Role"], () => require("./role"));
exports.RoleAttachment = null;
utilities.lazyLoad(exports, ["RoleAttachment"], () => require("./roleAttachment"));
exports.Run = null;
utilities.lazyLoad(exports, ["Run"], () => require("./run"));
exports.SavedFilter = null;
utilities.lazyLoad(exports, ["SavedFilter"], () => require("./savedFilter"));
exports.ScheduledDeleteStack = null;
utilities.lazyLoad(exports, ["ScheduledDeleteStack"], () => require("./scheduledDeleteStack"));
exports.ScheduledRun = null;
utilities.lazyLoad(exports, ["ScheduledRun"], () => require("./scheduledRun"));
exports.ScheduledTask = null;
utilities.lazyLoad(exports, ["ScheduledTask"], () => require("./scheduledTask"));
exports.SecurityEmail = null;
utilities.lazyLoad(exports, ["SecurityEmail"], () => require("./securityEmail"));
exports.Space = null;
utilities.lazyLoad(exports, ["Space"], () => require("./space"));
exports.Stack = null;
utilities.lazyLoad(exports, ["Stack"], () => require("./stack"));
exports.StackActivator = null;
utilities.lazyLoad(exports, ["StackActivator"], () => require("./stackActivator"));
exports.StackAwsRole = null;
utilities.lazyLoad(exports, ["StackAwsRole"], () => require("./stackAwsRole"));
exports.StackDependency = null;
utilities.lazyLoad(exports, ["StackDependency"], () => require("./stackDependency"));
exports.StackDependencyReference = null;
utilities.lazyLoad(exports, ["StackDependencyReference"], () => require("./stackDependencyReference"));
exports.StackDestructor = null;
utilities.lazyLoad(exports, ["StackDestructor"], () => require("./stackDestructor"));
exports.StackGcpServiceAccount = null;
utilities.lazyLoad(exports, ["StackGcpServiceAccount"], () => require("./stackGcpServiceAccount"));
exports.Task = null;
utilities.lazyLoad(exports, ["Task"], () => require("./task"));
exports.TerraformProvider = null;
utilities.lazyLoad(exports, ["TerraformProvider"], () => require("./terraformProvider"));
exports.User = null;
utilities.lazyLoad(exports, ["User"], () => require("./user"));
exports.VcsAgentPool = null;
utilities.lazyLoad(exports, ["VcsAgentPool"], () => require("./vcsAgentPool"));
exports.Version = null;
utilities.lazyLoad(exports, ["Version"], () => require("./version"));
exports.Webhook = null;
utilities.lazyLoad(exports, ["Webhook"], () => require("./webhook"));
exports.WorkerPool = null;
utilities.lazyLoad(exports, ["WorkerPool"], () => require("./workerPool"));
// Export sub-modules:
const config = require("./config");
exports.config = config;
const types = require("./types");
exports.types = types;
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "spacelift-terraform-provider:index/auditTrailWebhook:AuditTrailWebhook":
                return new exports.AuditTrailWebhook(name, undefined, { urn });
            case "spacelift-terraform-provider:index/awsIntegration:AwsIntegration":
                return new exports.AwsIntegration(name, undefined, { urn });
            case "spacelift-terraform-provider:index/awsIntegrationAttachment:AwsIntegrationAttachment":
                return new exports.AwsIntegrationAttachment(name, undefined, { urn });
            case "spacelift-terraform-provider:index/awsRole:AwsRole":
                return new exports.AwsRole(name, undefined, { urn });
            case "spacelift-terraform-provider:index/azureIntegration:AzureIntegration":
                return new exports.AzureIntegration(name, undefined, { urn });
            case "spacelift-terraform-provider:index/azureIntegrationAttachment:AzureIntegrationAttachment":
                return new exports.AzureIntegrationAttachment(name, undefined, { urn });
            case "spacelift-terraform-provider:index/bitbucketDatacenterIntegration:BitbucketDatacenterIntegration":
                return new exports.BitbucketDatacenterIntegration(name, undefined, { urn });
            case "spacelift-terraform-provider:index/blueprint:Blueprint":
                return new exports.Blueprint(name, undefined, { urn });
            case "spacelift-terraform-provider:index/context:Context":
                return new exports.Context(name, undefined, { urn });
            case "spacelift-terraform-provider:index/contextAttachment:ContextAttachment":
                return new exports.ContextAttachment(name, undefined, { urn });
            case "spacelift-terraform-provider:index/driftDetection:DriftDetection":
                return new exports.DriftDetection(name, undefined, { urn });
            case "spacelift-terraform-provider:index/environmentVariable:EnvironmentVariable":
                return new exports.EnvironmentVariable(name, undefined, { urn });
            case "spacelift-terraform-provider:index/gcpServiceAccount:GcpServiceAccount":
                return new exports.GcpServiceAccount(name, undefined, { urn });
            case "spacelift-terraform-provider:index/gitlabIntegration:GitlabIntegration":
                return new exports.GitlabIntegration(name, undefined, { urn });
            case "spacelift-terraform-provider:index/idpGroupMapping:IdpGroupMapping":
                return new exports.IdpGroupMapping(name, undefined, { urn });
            case "spacelift-terraform-provider:index/module:Module":
                return new exports.Module(name, undefined, { urn });
            case "spacelift-terraform-provider:index/mountedFile:MountedFile":
                return new exports.MountedFile(name, undefined, { urn });
            case "spacelift-terraform-provider:index/namedWebhook:NamedWebhook":
                return new exports.NamedWebhook(name, undefined, { urn });
            case "spacelift-terraform-provider:index/namedWebhookSecretHeader:NamedWebhookSecretHeader":
                return new exports.NamedWebhookSecretHeader(name, undefined, { urn });
            case "spacelift-terraform-provider:index/policy:Policy":
                return new exports.Policy(name, undefined, { urn });
            case "spacelift-terraform-provider:index/policyAttachment:PolicyAttachment":
                return new exports.PolicyAttachment(name, undefined, { urn });
            case "spacelift-terraform-provider:index/role:Role":
                return new exports.Role(name, undefined, { urn });
            case "spacelift-terraform-provider:index/roleAttachment:RoleAttachment":
                return new exports.RoleAttachment(name, undefined, { urn });
            case "spacelift-terraform-provider:index/run:Run":
                return new exports.Run(name, undefined, { urn });
            case "spacelift-terraform-provider:index/savedFilter:SavedFilter":
                return new exports.SavedFilter(name, undefined, { urn });
            case "spacelift-terraform-provider:index/scheduledDeleteStack:ScheduledDeleteStack":
                return new exports.ScheduledDeleteStack(name, undefined, { urn });
            case "spacelift-terraform-provider:index/scheduledRun:ScheduledRun":
                return new exports.ScheduledRun(name, undefined, { urn });
            case "spacelift-terraform-provider:index/scheduledTask:ScheduledTask":
                return new exports.ScheduledTask(name, undefined, { urn });
            case "spacelift-terraform-provider:index/securityEmail:SecurityEmail":
                return new exports.SecurityEmail(name, undefined, { urn });
            case "spacelift-terraform-provider:index/space:Space":
                return new exports.Space(name, undefined, { urn });
            case "spacelift-terraform-provider:index/stack:Stack":
                return new exports.Stack(name, undefined, { urn });
            case "spacelift-terraform-provider:index/stackActivator:StackActivator":
                return new exports.StackActivator(name, undefined, { urn });
            case "spacelift-terraform-provider:index/stackAwsRole:StackAwsRole":
                return new exports.StackAwsRole(name, undefined, { urn });
            case "spacelift-terraform-provider:index/stackDependency:StackDependency":
                return new exports.StackDependency(name, undefined, { urn });
            case "spacelift-terraform-provider:index/stackDependencyReference:StackDependencyReference":
                return new exports.StackDependencyReference(name, undefined, { urn });
            case "spacelift-terraform-provider:index/stackDestructor:StackDestructor":
                return new exports.StackDestructor(name, undefined, { urn });
            case "spacelift-terraform-provider:index/stackGcpServiceAccount:StackGcpServiceAccount":
                return new exports.StackGcpServiceAccount(name, undefined, { urn });
            case "spacelift-terraform-provider:index/task:Task":
                return new exports.Task(name, undefined, { urn });
            case "spacelift-terraform-provider:index/terraformProvider:TerraformProvider":
                return new exports.TerraformProvider(name, undefined, { urn });
            case "spacelift-terraform-provider:index/user:User":
                return new exports.User(name, undefined, { urn });
            case "spacelift-terraform-provider:index/vcsAgentPool:VcsAgentPool":
                return new exports.VcsAgentPool(name, undefined, { urn });
            case "spacelift-terraform-provider:index/version:Version":
                return new exports.Version(name, undefined, { urn });
            case "spacelift-terraform-provider:index/webhook:Webhook":
                return new exports.Webhook(name, undefined, { urn });
            case "spacelift-terraform-provider:index/workerPool:WorkerPool":
                return new exports.WorkerPool(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("spacelift-terraform-provider", "index/auditTrailWebhook", _module);
pulumi.runtime.registerResourceModule("spacelift-terraform-provider", "index/awsIntegration", _module);
pulumi.runtime.registerResourceModule("spacelift-terraform-provider", "index/awsIntegrationAttachment", _module);
pulumi.runtime.registerResourceModule("spacelift-terraform-provider", "index/awsRole", _module);
pulumi.runtime.registerResourceModule("spacelift-terraform-provider", "index/azureIntegration", _module);
pulumi.runtime.registerResourceModule("spacelift-terraform-provider", "index/azureIntegrationAttachment", _module);
pulumi.runtime.registerResourceModule("spacelift-terraform-provider", "index/bitbucketDatacenterIntegration", _module);
pulumi.runtime.registerResourceModule("spacelift-terraform-provider", "index/blueprint", _module);
pulumi.runtime.registerResourceModule("spacelift-terraform-provider", "index/context", _module);
pulumi.runtime.registerResourceModule("spacelift-terraform-provider", "index/contextAttachment", _module);
pulumi.runtime.registerResourceModule("spacelift-terraform-provider", "index/driftDetection", _module);
pulumi.runtime.registerResourceModule("spacelift-terraform-provider", "index/environmentVariable", _module);
pulumi.runtime.registerResourceModule("spacelift-terraform-provider", "index/gcpServiceAccount", _module);
pulumi.runtime.registerResourceModule("spacelift-terraform-provider", "index/gitlabIntegration", _module);
pulumi.runtime.registerResourceModule("spacelift-terraform-provider", "index/idpGroupMapping", _module);
pulumi.runtime.registerResourceModule("spacelift-terraform-provider", "index/module", _module);
pulumi.runtime.registerResourceModule("spacelift-terraform-provider", "index/mountedFile", _module);
pulumi.runtime.registerResourceModule("spacelift-terraform-provider", "index/namedWebhook", _module);
pulumi.runtime.registerResourceModule("spacelift-terraform-provider", "index/namedWebhookSecretHeader", _module);
pulumi.runtime.registerResourceModule("spacelift-terraform-provider", "index/policy", _module);
pulumi.runtime.registerResourceModule("spacelift-terraform-provider", "index/policyAttachment", _module);
pulumi.runtime.registerResourceModule("spacelift-terraform-provider", "index/role", _module);
pulumi.runtime.registerResourceModule("spacelift-terraform-provider", "index/roleAttachment", _module);
pulumi.runtime.registerResourceModule("spacelift-terraform-provider", "index/run", _module);
pulumi.runtime.registerResourceModule("spacelift-terraform-provider", "index/savedFilter", _module);
pulumi.runtime.registerResourceModule("spacelift-terraform-provider", "index/scheduledDeleteStack", _module);
pulumi.runtime.registerResourceModule("spacelift-terraform-provider", "index/scheduledRun", _module);
pulumi.runtime.registerResourceModule("spacelift-terraform-provider", "index/scheduledTask", _module);
pulumi.runtime.registerResourceModule("spacelift-terraform-provider", "index/securityEmail", _module);
pulumi.runtime.registerResourceModule("spacelift-terraform-provider", "index/space", _module);
pulumi.runtime.registerResourceModule("spacelift-terraform-provider", "index/stack", _module);
pulumi.runtime.registerResourceModule("spacelift-terraform-provider", "index/stackActivator", _module);
pulumi.runtime.registerResourceModule("spacelift-terraform-provider", "index/stackAwsRole", _module);
pulumi.runtime.registerResourceModule("spacelift-terraform-provider", "index/stackDependency", _module);
pulumi.runtime.registerResourceModule("spacelift-terraform-provider", "index/stackDependencyReference", _module);
pulumi.runtime.registerResourceModule("spacelift-terraform-provider", "index/stackDestructor", _module);
pulumi.runtime.registerResourceModule("spacelift-terraform-provider", "index/stackGcpServiceAccount", _module);
pulumi.runtime.registerResourceModule("spacelift-terraform-provider", "index/task", _module);
pulumi.runtime.registerResourceModule("spacelift-terraform-provider", "index/terraformProvider", _module);
pulumi.runtime.registerResourceModule("spacelift-terraform-provider", "index/user", _module);
pulumi.runtime.registerResourceModule("spacelift-terraform-provider", "index/vcsAgentPool", _module);
pulumi.runtime.registerResourceModule("spacelift-terraform-provider", "index/version", _module);
pulumi.runtime.registerResourceModule("spacelift-terraform-provider", "index/webhook", _module);
pulumi.runtime.registerResourceModule("spacelift-terraform-provider", "index/workerPool", _module);
pulumi.runtime.registerResourcePackage("spacelift-terraform-provider", {
    version: utilities.getVersion(),
    constructProvider: (name, type, urn) => {
        if (type !== "pulumi:providers:spacelift-terraform-provider") {
            throw new Error(`unknown provider type ${type}`);
        }
        return new provider_1.Provider(name, undefined, { urn });
    },
});
//# sourceMappingURL=index.js.map