"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.AwsRole = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("./utilities");
class AwsRole extends pulumi.CustomResource {
    /**
     * Get an existing AwsRole resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new AwsRole(name, state, { ...opts, id: id });
    }
    /**
     * Returns true if the given object is an instance of AwsRole.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AwsRole.__pulumiType;
    }
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["awsRoleId"] = state?.awsRoleId;
            resourceInputs["durationSeconds"] = state?.durationSeconds;
            resourceInputs["externalId"] = state?.externalId;
            resourceInputs["generateCredentialsInWorker"] = state?.generateCredentialsInWorker;
            resourceInputs["moduleId"] = state?.moduleId;
            resourceInputs["region"] = state?.region;
            resourceInputs["roleArn"] = state?.roleArn;
            resourceInputs["stackId"] = state?.stackId;
        }
        else {
            const args = argsOrState;
            if (args?.roleArn === undefined && !opts.urn) {
                throw new Error("Missing required property 'roleArn'");
            }
            resourceInputs["awsRoleId"] = args?.awsRoleId;
            resourceInputs["durationSeconds"] = args?.durationSeconds;
            resourceInputs["externalId"] = args?.externalId;
            resourceInputs["generateCredentialsInWorker"] = args?.generateCredentialsInWorker;
            resourceInputs["moduleId"] = args?.moduleId;
            resourceInputs["region"] = args?.region;
            resourceInputs["roleArn"] = args?.roleArn;
            resourceInputs["stackId"] = args?.stackId;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AwsRole.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}
exports.AwsRole = AwsRole;
/** @internal */
AwsRole.__pulumiType = 'spacelift-terraform-provider:index/awsRole:AwsRole';
//# sourceMappingURL=awsRole.js.map